eclipse.project.name = appName + '-shared'

apply plugin: 'jacoco'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile group: 'com.github.salomonbrys.kodein', name: 'kodein', version: '4.1.0'

    compile "io.arrow-kt:arrow-core:$arrowVersion"
//    compile 'io.arrow-kt:arrow-typeclasses:0.6.0'
//    compile 'io.arrow-kt:arrow-instances:0.6.0'
      compile "io.arrow-kt:arrow-syntax:$arrowVersion"
//
//    compile 'io.arrow-kt:arrow-free:0.6.0' //optional
//    compile 'io.arrow-kt:arrow-mtl:0.6.0' //optional
//    compile 'io.arrow-kt:arrow-effects:0.6.0' //optional
//    compile 'io.arrow-kt:arrow-effects-rx2:0.6.0' //optional
//    compile 'io.arrow-kt:arrow-effects-kotlinx-coroutines:0.6.0' //optional
    compile "io.arrow-kt:arrow-optics:$arrowVersion" //optional

    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation "io.mockk:mockk:$mockkVersion"
}

test.finalizedBy(jacocoTestReport)

test {
    useJUnitPlatform()

    testLogging {
        events = ["passed", "failed", "skipped"]
    }
    jacoco {
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
}

jacoco {
    // You may modify the Jacoco version here
    toolVersion = "$jaCoCoVersion"
}

jacocoTestReport {
    // Adjust the output of the test report
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

repositories {
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}
